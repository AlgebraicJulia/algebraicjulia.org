@article{Krotzsch2017,
  abstract        = {In modelling real-world knowledge, there often arises a need to represent and reason with meta-knowledge. To equip description logics (DLs) for dealing with such ontologies, we enrich DL concepts and roles with finite sets of attribute-value pairs, called annotations, and allow concept inclusions to express constraints on annotations. We investigate a range of DLs starting from the lightweight description logic EL, covering the prototypical ALCH, and extending to the very expressive SROIQ, the DL underlying OWL 2 DL.},
  author          = {Kr{\"{o}}tzsch, Markus and Marx, Maximilian and Ozaki, Ana and Thost, Veronika},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Kr{\"{o}}tzsch et al. - 2017 - Attributed Description Logics Reasoning on Knowledge Graphs.pdf:pdf},
  keywords        = {Knowledge Representation and Reasoning: Computatio,Knowledge Representation and Reasoning: Descriptio,Knowledge Representation and Reasoning: Knowledge,Knowledge Representation and Reasoning: Logics for},
  mendeley-groups = {Topics/Data Representation & Management/Knowledge Representation/Knowledge Graphs,Projects/KR2023},
  title           = {{Attributed Description Logics: Reasoning on Knowledge Graphs *}},
  year            = {2017}
}
@article{Rosenschein1985,
  annote          = {**Autonomous systems combine every major subarea of AI**
                     
                     Major subareas in AI
                     - Perception uses sensory input
                     - Planning uses consequences of potential actions
                     - Reasoning uses facts it knows and derives conclusions
                     - Learning uses experience to update knowledge
                     - Communication uses mutual knowledge and continues to update
                     
                     
                     Types of logic:
                     - epistemic logic
                     - dynamic logic
                     
                     Dynamic logic can easily be mapped to the real-world by understanding that the combined internal state and the state of the world is a state and actions as being state transitions.
                     The epistemic logic, however, requires that knowledge be "known" in the state. The ways we can translate that is to a computer is to either (a) describe a data structure that encodes this knowledge, such as labled graphs or records, which is called the interpreted-symbolic-structures (ISS) approach or (b) by updating the state of the machine and the environment using a situated automata approach.
                     
                     ## What are they doing?
                     
                     They have described a new way of formally encoding the machine's knowledge base and the semantics that the designer is assigning to the elements of the knowledge base, namely the situated automata approach. This solves the problem of having the interpretation of the knowledge only be implicit when using the ISS approach.
                     
                     ## Strengths
                     
                     - Provides an abstraction of encoding and updating knowledge that does not tie someone to a particular symbolic data structure
                     
                     ## Weaknessses
                     
                     - How do you implement this in a computer?},
  author          = {Rosenschein, Stanley},
  file            = {:Users/aguinam1/Downloads/Rosenschein1985_Article_FormalTheoriesOfKnowledgeInAIA.pdf:pdf},
  journal         = {New Generation Computing},
  keywords        = {knowledge representation},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {345--357},
  title           = {{Formal Theories of Knowledge in AI and Robotics}},
  volume          = {3},
  year            = {1985}
}
@article{Bloisi2016,
  abstract        = {Robotics systems need to be robust and adaptable to multiple operational conditions, in order to be deployable in different application domains. Contextual knowledge can be used for achieving greater flexibility and robustness in tackling the main tasks of a robot, namely mission execution, adaptability to environmental conditions, and self-assessment of performance. In this chapter, we review the research work focusing on the acquisition, management, and deployment of contextual information in robotic systems. Our aim is to show that several uses of contextual knowledge (at different representational levels) have been proposed in the literature, regarding many tasks that are typically required for mobile robots. As a result of this survey, we analyze which notions and approaches are applicable to the design and implementation of architectures for information fusion. More specifically, we sketch an architectural framework which enables for an effective engineering of systems that use contextual knowledge, by including the acquisition, representation, and use of contextual information into a framework for information fusion.},
  author          = {Bloisi, Domenico D. and Nardi, Daniele and Riccio, Francesco and Trapani, Francesco},
  doi             = {10.1007/978-3-319-28971-7_25},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Bloisi et al. - 2016 - Context in Robotics and Information Fusion.pdf:pdf},
  journal         = {Advances in Computer Vision and Pattern Recognition},
  keywords        = {autonomous robotics,context-aware,context-awareness,context-dependent infor-,survey},
  mendeley-groups = {Projects/KR2023},
  mendeley-tags   = {context-aware,survey},
  pages           = {675--699},
  title           = {{Context in Robotics and Information Fusion}},
  year            = {2016}
}
@article{Sun2019,
  abstract        = {The review analyzes and defines the related key concepts firstly. Then the article reviews the knowledge representation (KR) formalism and the existing knowledge systems in robotics. The review divides KR in robotics into three categories, namely semantic networks, rules and logical knowledge representation. Then the existing knowledge systems are classified according to the three categories. Finally the article introduces three typical knowledge representation languages in the application of robot task planning and the corresponding task planners. It is still a disadvantage that the domain knowledge of the existing task planners is generated manually, so that the article introduces the method of machine learning to generate the domain knowledge automatically. Our contributions are to facilitate the selection of a knowledge system according to the requirements of robotic application and predict the development trend, hoping to inspire and promote the research in autonomous robotics.},
  author          = {Sun, Xiaolei and Zhang, Yu},
  doi             = {10.1145/3325730.3325756},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Sun, Zhang - 2019 - A review of domain knowledge representation for robot task planning.pdf:pdf},
  isbn            = {9781450362580},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {Automatic planning,Knowledge engineering,Knowledge representation,Robot task planning,Symbolism AI},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {176--183},
  title           = {{A review of domain knowledge representation for robot task planning}},
  year            = {2019}
}
@article{Baez2011,
  abstract        = {In physics, Feynman diagrams are used to reason about quantum processes. In the 1980s, it became clear that underlying these diagrams is a powerful analogy between quantum physics and topology: namely, a linear operator behaves very much like a "cobordism". Similar diagrams can be used to reason about logic, where they represent proofs, and computation, where they represent programs. With the rise of interest in quantum cryptography and quantum computation, it became clear that there is extensive network of analogies between physics, topology, logic and computation. In this expository paper, we make some of these analogies precise using the concept of "closed symmetric monoidal category". We assume no prior knowledge of category theory, proof theory or computer science.},
  archiveprefix   = {arXiv},
  arxivid         = {0903.0340},
  author          = {Baez, J. and Stay, M.},
  doi             = {10.1007/978-3-642-12821-9_2},
  eprint          = {0903.0340},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Baez, Stay - 2011 - Physics, topology, logic and computation A Rosetta Stone.pdf:pdf},
  isbn            = {9783642128202},
  issn            = {00758450},
  journal         = {Lecture Notes in Physics},
  mendeley-groups = {Topics/Category Theory,Projects/KR2023},
  pages           = {95--172},
  pmid            = {25246403},
  title           = {{Physics, topology, logic and computation: A Rosetta Stone}},
  volume          = {813},
  year            = {2011}
}
@book{Ghallab2004,
  abstract        = {Automated planning technology now plays a significant role in a variety of demanding applications, ranging from controlling space vehicles and robots to playing the game of bridge. These real-world applications create new opportunities for synergy between theory and practice: observing what works well in practice leads to better theories of planning, and better theories lead to better performance of practical applications. Automated Planning mirrors this dialogue by offering a comprehensive, up-to-date resource on both the theory and practice of automated planning. The book goes well beyond classical planning, to include temporal planning, resource scheduling, planning under uncertainty, and modern techniques for plan generation, such as task decomposition, propositional satisfiability, constraint satisfaction, and model checking. The authors combine over 30 years experience in planning research and development to offer an invaluable text to researchers, professionals, and graduate students. Comprehensively explains paradigms for automated planning. Provides a thorough understanding of theory and planning practice, and how they relate to each other. Presents case studies of applications in space, robotics, CAD/CAM, process control, emergency operations, and games. Provides a thorough understanding of AI planning theory and practice, and how they relate to each other. Covers all the contemporary topics of planning, as well as important practical applications of planning, such as model checking and game playing. Presents case studies and applications in planning engineering, space, robotics, CAD/CAM, process control, emergency operations, and games. Provides lecture notes, examples of programming assignments, pointers to downloadable planning systems and related information online. {\textcopyright} 2004 Elsevier Inc. All rights reserved.},
  author          = {Ghallab, Malik and Nau, Dana and Traverso, Paolo},
  booktitle       = {Automated Planning: Theory and Practice},
  doi             = {10.1016/B978-1-55860-856-6.X5000-5},
  isbn            = {9781558608566},
  publisher       = {Morgan Kaufmann},
  mendeley-groups = {Projects/Visualization of PDDL Solutions,Topics/AI Planning,Projects/KR2023},
  title           = {{Automated Planning: Theory and Practice}},
  year            = {2004}
}
@article{Aguinaldo2021,
  abstract        = {RobotCat uses a goal-oriented, declarative approach for robot programming that leverages mathematical representations found in category theory as a way to formally model modularity and behavioral knowledge. We define hierarchical interfaces that require only local modifications when new software or work cell models are introduced, thus making robot programming more interoperable.},
  author          = {Aguinaldo, Angeline and Bunker, Jacob and Pollard, Blake and Shukla, Ankit and Canedo, Arquimedes and Quiros, Gustavo and Regli, William},
  doi             = {10.1109/TASE.2021.3094055},
  file            = {:Users/aguinam1/Downloads/RoboCat_A_Category_Theoretic_Framework_for_Robotic_Interoperability_Using_Goal-Oriented_Programming.pdf:pdf},
  issn            = {15583783},
  journal         = {IEEE Transactions on Automation Science and Engineering},
  keywords        = {Category theory,Interoperability,Manipulators,Programming,Robot programming,Robot sensing systems,Robots,Task analysis,goal-oriented programming,interoperability,primary: robotics,secondary: CRCL.},
  mendeley-groups = {My papers,Projects/KR2023},
  pages           = {1--9},
  publisher       = {IEEE},
  title           = {{RoboCat: A Category Theoretic Framework for Robotic Interoperability Using Goal-Oriented Programming}},
  year            = {2021}
}
@article{Spivak2011,
  abstract        = {In this paper we introduce the olog, or ontology log, a category-theoretic model for knowledge representation (KR). Grounded in formal math-ematics, ologs can be rigorously formulated and cross-compared in ways that other KR models (such as semantic networks) cannot. An olog is similar to a relational database schema; in fact an olog can serve as a data repository if desired. Unlike database schemas, which are generally difficult to create or modify, ologs are designed to be user-friendly enough that authoring or re-configuring an olog is a matter of course rather than a difficult chore. It is hoped that learning to author ologs is much simpler than learning a database definition language, despite their similarity. We describe ologs carefully and illustrate with many examples. As an application we show that any primitive recursive function can be described by an olog. We also show that ologs can be aligned or connected together into a larger network using functors. The various methods of information flow and institutions can then be used to in-tegrate local and global world-views. We finish by providing several different avenues for future research.},
  archiveprefix   = {arXiv},
  arxivid         = {arXiv:1102.1889v2},
  author          = {Spivak, David I and Kent, Robert E},
  eprint          = {arXiv:1102.1889v2},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Spivak, Kent - 2011 - OLOGS A CATEGORICAL FRAMEWORK FOR KNOWLEDGE REPRESENTATION.pdf:pdf},
  journal         = {PLOS ONE},
  keywords        = {()},
  mendeley-groups = {Topics/Data Representation & Management,Projects/KR2023},
  title           = {{Ologs: a categorical framework for knowledge representation}},
  url             = {https://arxiv.org/pdf/1102.1889.pdf},
  year            = {2011}
}
@article{Harmer2020,
  abstract        = {A mathematical theory is presented for the representation of knowledge in the form of a directed acyclic hierarchy of objects in a category where all paths between any given pair of objects are required to be equal. The conditions under which knowledge update, in the form of the sesqui-pushout rewriting of an object in a hierarchy, can be propagated to the rest of the hierarchy, in order to maintain all required path equalities, are analysed: some rewrites must be propagated forwards, in the direction of the arrows, while others must be propagated backwards, against the direction of the arrows, and, depending on the precise form of the hierarchy, certain composability conditions may also be necessary. The implementation of this theory, in the ReGraph Python library for (simple) directed graphs with attributes on nodes and edges, is then discussed in the context of two significant use cases.},
  author          = {Harmer, Russ and Oshurko, Eugenia},
  doi             = {10.1016/j.jlamp.2020.100559},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Harmer, Oshurko - 2020 - Knowledge representation and update in hierarchies of graphs.pdf:pdf},
  issn            = {23522216},
  journal         = {Journal of Logical and Algebraic Methods in Programming},
  keywords        = {Graph databases,Graph rewriting,Knowledge representation},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {100559},
  publisher       = {Elsevier Inc.},
  title           = {{Knowledge representation and update in hierarchies of graphs}},
  url             = {https://doi.org/10.1016/j.jlamp.2020.100559},
  volume          = {114},
  year            = {2020}
}
@article{Master2019,
  abstract        = {Assembly planning is a difficult problem for companies. Many disciplines such as design, planning, scheduling, and manufacturing execution need to be carefully engineered and coordinated to create successful product assembly plans. Recent research in the field of design for assembly has proposed new methodologies to design product structures in such a way that their assembly is easier. However, present assembly planning approaches lack the engineering tool support to capture all the constraints associated to assembly planning in a unified manner. This paper proposes CompositionalPlanning, a string diagram based framework for assembly planning. In the proposed framework, string diagrams and their compositional properties serve as the foundation for an engineering tool where CAD designs interact with planning and scheduling algorithms to automatically create high-quality assembly plans. These assembly plans are then executed in simulation to measure their performance and to visualize their key build characteristics. We demonstrate the versatility of this approach in the LEGO assembly domain. We developed two reference LEGO CAD models that are processed by CompositionalPlanning's algorithmic pipeline. We compare sequential and parallel assembly plans in a Minecraft simulation and show that the time-to-build performance can be optimized by our algorithms.},
  archiveprefix   = {arXiv},
  arxivid         = {1909.10475},
  author          = {Master, Jade and Patterson, Evan and Yousfi, Shahin and Canedo, Arquimedes},
  eprint          = {1909.10475},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Master et al. - 2019 - String Diagrams for Assembly Planning.pdf:pdf},
  journal         = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  mendeley-groups = {Topics/Category Theory/Applied Category Theory,Projects/KR2023},
  title           = {{String Diagrams for Assembly Planning}},
  url             = {http://arxiv.org/abs/1909.10475},
  year            = {2020}
}
@inproceedings{Aguinaldo2021a,
  abstract        = {Classical AI planners provide solutions to planning problems in the form of long and opaque text outputs. To aid in the generalization of planning solutions, it is necessary to have a rich and comprehensible representation for both human and computers beyond the current line-by-line text notation. In particular , it is desirable to encode the trace of literals throughout the plan to capture the dependencies between actions selected. The approach of this paper is to view the actions as maps between literals and the selected plan as a composition of those maps. The mathematical theory, called category theory , provides the relevant structures for capturing maps, their compositions, and maps between compositions. We employ this theory to propose an algorithm agnostic, model-based representation for domains, problems, and plans expressed in the commonly used planning description language, PDDL. This category theoretic representation is accompanied by a graphical syntax in addition to a linear notation, similar to algebraic expressions, that can be used to infer literals used at every step of the plan. This provides the appropriate constructive abstraction and facilitates comprehension for human operators. In this paper, we demonstrate this on a plan with the Blocksworld domain.},
  author          = {Aguinaldo, Angeline and Regli, William},
  booktitle       = {ICAPS 2021 Workshop XAIP},
  file            = {:Users/aguinam1/Downloads/a_graphical_model_based_repres.pdf:pdf},
  mendeley-groups = {My papers,Projects/KR2023},
  title           = {{A Graphical Model-Based Representation for PDDL Plans using Category Theory}},
  url             = {www.aaai.org},
  year            = {2021}
}
@techreport{Censi2015,
  author      = {Censi, Andrea},
  title       = {A Mathematical Theory of Co-Design},
  url         = {https://arxiv.org/abs/1512.08055},
  month       = {September},
  year        = {2016},
  pdf         = {https://arxiv.org/pdf/1512.08055},
  institution = {Laboratory for Information and Decision Systems, MIT}
}
@book{Russell2021,
  author          = {Russell, Stuart and Norvig, Peter and Chang, Ming-Wei and Devlin, Jacob and Dragan, Anca and Forsyth, David and Goodfellow, Ian and Malik, Jitendra and Mansinghka, Vikash},
  edition         = {4th},
  mendeley-groups = {Projects/KR2023},
  publisher       = {Pearson},
  title           = {{Artificial Intelligence: a modern approach}},
  year            = {2021}
}
@techreport{Knoblock1998,
  author          = {Knoblock, Craig and Barrett, Anthony and Christianson, Dave and Friedman, Marc and Kwok, Chung and Golden, Keith and Penberthy, Scott and Smith, David E and Sun, Ying and Weld, Daniel},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Knoblock et al. - Unknown - PDDL The Planning Domain De nition Language Abstract 1 Introduction.pdf:pdf},
  mendeley-groups = {Projects/Functional Interoperable Compiler (FIC),Projects/KR2023},
  title           = {{PDDL | The Planning Domain Definition Language}},
  institution     = {Yale Center for Computational Vision and Control},
  year            = {1998}
}
@article{Lifschitz2008,
  abstract        = {Answer set programming (ASP) is a form of declarative programming oriented towards difficult search problems. As an outgrowth of research on the use of nonmonotonic reasoning in knowledge representation, it is particularly useful in knowledge-intensive applications. ASP programs consist of rules that look like Prolog rules, but the computational mechanisms used in ASP are different: they are based on the ideas that have led to the creation of fast satisfiability solvers for prepositional logic. Copyright {\textcopyright} 2008.},
  author          = {Lifschitz, Vladimir},
  file            = {:Users/aguinam1/Downloads/wiasp.pdf:pdf},
  isbn            = {9781577353683},
  journal         = {Proceedings of the National Conference on Artificial Intelligence},
  mendeley-groups = {KR+ICAPS Proceedings,Projects/KR2023},
  pages           = {1594--1597},
  title           = {{What is answer set programming?}},
  volume          = {3},
  year            = {2008}
}
@book{Dascal2008,
  author          = {Dascal, Marcelo},
  file            = {:Users/aguinam1/Downloads/1-4020-5228-6_22.pdf:pdf},
  mendeley-groups = {Projects/KR2023},
  pages           = {219--224},
  publisher       = {The New Synthese Historical Library},
  title           = {{Introduction to a Secret Encyclopedia}},
  year            = {2008}
}
@article{Batusov2019,
  abstract        = {PDDL+ is an extension of PDDL2.1 which incorporates fully-featured autonomous processes and allows for better modelling of mixed discrete-continuous domains. Unlike PDDL2.1, PDDL+ lacks a logical semantics, relying instead on state-transitional semantics enriched with hybrid automata semantics for the continuous states. This complex semantics makes analysis and comparisons to other action formalisms difficult. In this paper, we propose a natural extension of Reiter's situation calculus theories inspired by hybrid automata. The kinship between PDDL+ and hybrid automata allows us to develop a direct mapping between PDDL+ and situation calculus, thereby supplying PDDL+ with a logical semantics and the situation calculus with a modern way of representing autonomous processes. We outline the potential benefits of the mapping by suggesting a new approach to effective planning in PDDL+.},
  author          = {Batusov, Vitaliy and Soutchanski, Mikhail},
  doi             = {10.1609/icaps.v29i1.3548},
  file            = {:Users/aguinam1/Downloads/3548-Article Text-6607-1-10-20190625.pdf:pdf},
  isbn            = {9781577358077},
  issn            = {23340843},
  journal         = {Proceedings International Conference on Automated Planning and Scheduling, ICAPS},
  mendeley-groups = {KR+ICAPS Proceedings,Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {40--48},
  title           = {{A logical semantics for PDDL+}},
  year            = {2019}
}
@incollection{McCarthy1969,
  author    = {John McCarthy and Patrick J. Hayes},
  title     = {Some Philosophical Problems from the Standpoint of
               Artificial Intelligence},
  booktitle = {Machine Intelligence 4},
  editor    = {B. Meltzer and D. Michie},
  pages     = {463--502},
  publisher = {Edinburgh University Press},
  year      = {1969},
  note      = {reprinted in McC90}
}
@article{Abramsky2008,
  archiveprefix   = {arXiv},
  arxivid         = {arXiv:0808.1023v1},
  author          = {Abramsky, Samson and Coecke, Bob},
  eprint          = {arXiv:0808.1023v1},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Abramsky, Coecke - 2008 - Categorical Quantum Mechanics.pdf:pdf},
  mendeley-groups = {Topics/Category Theory/Applied Category Theory,Projects/KR2023},
  pages           = {1--63},
  journal         = {Handbook of Quantum Logic and Quantum Structures vol II},
  title           = {{Categorical Quantum Mechanics}},
  year            = {2008}
}
@article{Breiner2016,
  abstract        = {As we extend the reach of the Internet through sensing and automation, networked interactions become more critical and safety and security require improved means for designing and testing system components, platforms and services. A tremendous amount of messy, heterogeneous data passes through such networks; integrating and applying that data so that it can be used for seamless interoperability and higher level reasoning requires conversion into some higher abstraction. This necessitates a new foundation for information modeling and model management, broadly construed. Such a foundation must support model construction in a wide range of formalism as well as capabilities for integrating models across different formalisms. We must also allow for easy model evolution, simplifying both iterative design and long-term maintenance. In this paper, we argue that category theory, a branch of abstract mathematics, provides a firm conceptual foundation for information modeling which already meets most of these criteria. We close with a discussion of some challenges for exploiting category theory in applied contexts.},
  author          = {Breiner, Spencer and Subrahmanian, Eswaran and Sriram, Ram D.},
  doi             = {10.1145/3017995.3018003},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Breiner, Subrahmanian, Sriram - 2016 - Modeling the Internet of Things A foundational approach.pdf:pdf},
  isbn            = {9781450348744},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {Category Theory,Internet of Things,Interoperability},
  mendeley-groups = {Topics/Category Theory/Applied Category Theory,Projects/KR2023},
  pages           = {38--41},
  title           = {{Modeling the Internet of Things: A foundational approach}},
  volume          = {Part F1271},
  year            = {2016}
}
@article{Breiner2019a,
  abstract        = {In this paper we use formal tools from category theory to develop a foundation for creating and managing models in systems where knowledge is distributed across multiple representations and formats. We define a class of models which incorporate three different representations---computations, logical semantics, and data--as well as model mappings (functors) to establish relationships between them. We prove that our models support model merge operations called colimits and use these to define a methodology for model integration.},
  author          = {Breiner, Spencer and Pollard, Blake and Subrahmanian, Eswaran},
  doi             = {10.1017/dsi.2019.202},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Breiner, Pollard, Subrahmanian - 2019 - Functorial Model Management.pdf:pdf},
  journal         = {Proceedings of the Design Society: International Conference on Engineering Design},
  keywords        = {data integration,information management,management,model,se,semantic data processing,systems engineering},
  mendeley-groups = {Topics/Category Theory/Applied Category Theory,Projects/KR2023},
  number          = {1},
  pages           = {1963--1972},
  title           = {{Functorial Model Management}},
  volume          = {1},
  year            = {2019}
}
@article{Breiner2016a,
  annote          = {"Process plans provide a structure for 1) identifying the tasks involved in a given process, 2) the resources needed to accomplish them, and 3) a variety of relationships and constraints between these.”
                     
                     
                     "Here we use these tools to analyze the relationship between different levels of abstraction in process planning hierarchy. We also model some spatiotemporal aspects of planning, dynamic decision-making inside the process hierarchy and the updating procedure in the event of errors or extensions in the production line.”
                     
                     
                     A trace in the string diagram is an execution path that affects the state of object along the string
                     
                     
                     "Our approach is based on category theory (CT), a high-level axiomatization of functional relationships and how they compose.”
                     
                     
                     "A proper introduction to CT is beyond the scope of this paper, so we will lean on intuitions here. However, there are several good introductory texts from a number of different perspectives including mathematics [1], computer science [5] and general science and engineering [25].”
                     
                     
                     Increases "possibilities for model validation and analysis.”
                     
                     
                     "diagram- matic mathematical notation called string diagrams.”
                     
                     
                     "string diagrams increase model flexibility by clearly distinguishing between syntax and semantics.”
                     
                     
                     "an early application for string diagrams was the management of calculations in quantum mechanics [21].”
                     
                     
                     "by using string diagrams we inherit all the benefits of a formal language (precise represention, error checking, etc.) while off-loading the parsing and interpretation for the notation to our visual cortex.”
                     
                     
                     "Compositionality means that we can calculate or predict the behavior of a complex network by specifying (i) the (possible) behavior of its components and (ii) the architecture that organizes them into a system.”
                     
                     
                     have been produced by prior processes and (ii) are available for consumption by future ones. 
                     
                     
                     
                     
                     We also allow processes which have no inputs or no outputs, called sources and sinks. These 
                     
                     
                     
                     
                     
                     
                     are useful for representing interfaces with external systems such as the electrical grid or waste disposal. 
                     
                     
                     
                     
                     
                     
                     scalar processes can be used to set global parameters and other environmental variables. 
                     
                     
                     
                     
                     
                     
                     In linear syntax, parallel composition is usually denoted by the tensor symbol ⊗, so that the complex process just above would be written drill ⊗ cut. The use of this symbol is purely con- ventional: it is independent of (though related to) other uses of the tensor symbol in mathematics. 
                     
                     
                     
                     
                     
                     
                     "When we compose two processes serially, we use the output of one process as the input to the next. This means that serial composition only makes sense when type(s) of the output resource(s) in the first process match the input resource(s) of the second.”
                     
                     
                     
                     
                     
                     
                     In short, a string diagram represents the way that a single complex process is composed from simple processes. A category is a collection of all possible complex processes which can be composed from a collection of simple processes. 
                     
                     
                     
                     
                     
                     
                     All possible traces that satisfy end state form a category?
                     
                     
                     
                     
                     
                     
                     The information encoded in string diagrams is topological rather than geometric: it concerns what is connected to what, rather than their particular positions. 
                     
                     
                     Relative instead of absolute
                     
                     
                     **Twists don't block processes**
                     
                     
                     
                     
                     
                     
                     "A category (without modifiers), is a mathematical structure for studying serial composition and identities; every process has a single input and output and there is no parallel composition. These can be generalized to monoidal categories, which add in parallel composition (and, with it, multiple inputs and outputs). Finally, in a symmetric monoidal category we add in the add the additional structure of the twist.”
                     
                     
                     
                     
                     
                     
                     For example, in making a hinge we may not care whether the leaf is first drilled then bent, or bent and then drilled. If we are truly indifferent to the difference between these sub-processes, we could add in the following equation to our category
                     
                     In a shop with a limited number machines, this could allow a scheduler more freedom to match jobs to machines. 
                     
                     
                     Functors are mappings between categories which respect composition, and they provide the machinery needed to encode relationships between different diagrams. 
                     
                     
                     "dealing with location and timing"},
  author          = {Breiner, Spencer and Jones, Al and Subrahmanian, Eswaran},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Breiner, Jones, Subrahmanian - 2016 - Categorical models for process planning.pdf:pdf;:Users/aguinam1/Downloads/1-s2.0-S0166361518308091-main.pdf:pdf},
  journal         = {Computers in Industry},
  keywords        = {category theory,mathematical modeling,process plan,string diagram},
  mendeley-groups = {Topics/Category Theory/Applied Category Theory,Projects/KR2023},
  pages           = {1--35},
  title           = {{Categorical models for process planning}},
  year            = {2016}
}
@article{Amiri2022,
  abstract        = {Robot planning in partially observable domains is difficult, because a robot needs to estimate the current state and plan actions at the same time. When the domain includes many objects, reasoning about the objects and their relationships makes robot planning even more difficult. In this letter, we develop an algorithm called scene analysis for robot planning (SARP) that enables robots to reason with visual contextual information toward achieving long-term goals under uncertainty. SARP constructs scene graphs, a factored representation of objects and their relations, using images captured from different positions, and reasons with them to enable context-aware robot planning under partial observability. Experiments have been conducted using multiple 3D environments in simulation, and a dataset collected by a real robot. In comparison to standard robot planning and scene analysis methods, in a target search domain, SARP improves both efficiency and accuracy in task completion.},
  archiveprefix   = {arXiv},
  arxivid         = {2202.10432},
  author          = {Amiri, Saeid and Chandan, Kishan and Zhang, Shiqi},
  doi             = {10.1109/LRA.2022.3157567},
  eprint          = {2202.10432},
  file            = {:Users/aguinam1/Downloads/2202.10432.pdf:pdf},
  issn            = {23773766},
  journal         = {IEEE Robotics and Automation Letters},
  keywords        = {Planning under uncertainty,probabilistic inference,semantic scene understanding},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {2},
  pages           = {5560--5567},
  title           = {{Reasoning with Scene Graphs for Robot Planning under Partial Observability}},
  volume          = {7},
  year            = {2022}
}
@article{Brown2022,
  abstract        = {We demonstrate how category theory provides specifications that can efficiently be implemented via imperative algorithms and apply this to the field of graph rewriting. By examples, we show how this paradigm of software development makes it easy to quickly write correct and performant code. We provide a modern implementation of graph rewriting techniques at the level of abstraction of finitely-presented C-sets and clarify the connections between C-sets and the typed graphs supported in existing rewriting software. We emphasize that our open-source library is extensible: by taking new categorical constructions (such as slice categories, structured cospans, and distributed graphs) and relating their limits and colimits to those of their underlying categories, users inherit efficient algorithms for pushout complements and (final) pullback complements. This allows one to perform double-, single-, and sesqui-pushout rewriting over a broad class of data structures.},
  archiveprefix   = {arXiv},
  arxivid         = {2111.03784},
  author          = {Brown, Kristopher and Patterson, Evan and Hanks, Tyler and Fairbanks, James},
  eprint          = {2111.03784},
  file            = {:Users/aguinam1/Downloads/2111.03784.pdf:pdf},
  journal         = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  keywords        = {category theory,double pushout rewriting,graph rewriting},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  title           = {{Computational category-theoretic rewriting}},
  url             = {http://arxiv.org/abs/2111.03784},
  year            = {2021}
}
@article{Wilkins2001,
  annote          = {** Show the gap in existing knowledge-based planning methods
                     
                     "Interactive planning" is something that can be addressed by this framework
                     
                     My thesis is concerned with domain knowledge representation for planning and will solve the problem of interactively reasoning about affordances and replanning in robotics. 
                     
                     HTNs encode hierararchy of actions, but don't relate back to a knowledge-base for the states. We desire a functorial relationship between plan execution and knowledge base updates. An affordance relation is one that connects the world to its specific actions.
                     
                     If action schemas are only considered with the type of knowledge and a sequence of actions can be identified with one instance, then actions can be found with other instances assuming they have the same type.},
  author          = {Wilkins, D. E. and DesJardins, M.},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Wilkins, DesJardins - 2001 - A call for knowledge-based planning.pdf:pdf},
  issn            = {07384602},
  journal         = {AI Magazine},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {1},
  pages           = {99--115},
  title           = {{A call for knowledge-based planning}},
  volume          = {22},
  year            = {2001}
}
@article{Kang2009,
  annote          = {QUALM: They did NOT discuss how to do combinatorial abstraction between action and domain. I guess its done as object-object relations between the "state", "action", and "context" hierarchies?},
  author          = {Kang, Dongyeop and Choi, Ho-jin},
  file            = {:Users/aguinam1/Downloads/Hierarchical_Planning_through_Operator_and_World_Abstraction_using_ontology_for_home_service_robots.pdf:pdf},
  isbn            = {9788955191394},
  journal         = {2009 11th International Conference on Advanced Communication Technology},
  keywords        = {bierarcbical planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {2209--2214},
  publisher       = {GIRI},
  title           = {{Hierarchical Planning through Operator and World Abstraction using ontology for home service robots}},
  year            = {2009}
}
@article{Haslum2003,
  author          = {Haslum, Patrik and Scholz, Ulrich},
  file            = {:Users/aguinam1/Downloads/PDDL-2003-Domain-Knowledge-Planning.pdf:pdf},
  journal         = {Proceedings of the ICAPS workshop on PDDL},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {69--78},
  title           = {{Domain Knowledge in Planning : Representation and Use}},
  year            = {2003}
}
@article{Habel1996,
  abstract        = {In each graph-grammar approach it is defined how and under which conditions graph productions can be applied to a given graph in order to obtain a derived graph. The conditions under which productions can be applied are called application conditions. Although the generative power of most of the known general graph-grammar approaches is sufficient to generate any recursively enumerable set of graphs, it is often convenient to have specific application conditions for each production. Such application conditions, on the one hand, include context conditions like the existence or non-existence of nodes, edges, or certain subgraphs in the given graph as well as embedding restrictions concerning the morphisms from the left-hand side of the production to the given graph. In this paper, the concept of application conditions introduced by Ehrig and Habel is restricted to contextual conditions, especially negative ones. In addition to the general concept, we state local confluence and the Parallelism Theorem for derivations with application conditions. Finally we study context-free graph grammars with application conditions with respect to their generative power.},
  author          = {Habel, Annegret and Heckel, Reiko and Taentzer, Gabriele},
  doi             = {10.3233/fi-1996-263404},
  file            = {:Users/aguinam1/Downloads/download (3).pdf:pdf},
  isbn            = {1996263404},
  issn            = {01692968},
  journal         = {Fundamenta Informaticae},
  keywords        = {Application conditions,Contextual conditions,Graph grammars,Graph transformation systems},
  mendeley-groups = {Projects/KR2023},
  number          = {3-4},
  pages           = {287--313},
  title           = {{Graph grammars with negative application conditions}},
  volume          = {26},
  year            = {1996}
}
@article{Schafer2021,
  abstract        = {Technology has sufficiently matured to enable, in principle, flexible and autonomous robotic assembly systems. However, in practice, it requires making all the relevant (implicit) knowledge that system engineers and workers have - about products to be assembled, tasks to be performed, as well as robots and their skills - available to the system explicitly. Only then can the planning and execution components of a robotic assembly pipeline communicate with each other in the same language and solve tasks autonomously without human intervention. This is why we have developed the Factory of the Future (FoF) ontology. At its core, this ontology models the tasks that are necessary to assemble a product and the robotic skills that can be employed to complete said tasks. The FoF ontology is based on existing standards. We started with theoretical considerations and iteratively adapted it based on practical experience gained from incorporating more and more components required for automated planning and assembly. Furthermore, we propose tools to extend the ontology for specific scenarios with knowledge about parts, robots, tools, and skills from various sources. The resulting scenario ontology serves us as world model for the robotic systems and other components of the assembly process. A central runtime interface to this world model provides fast and easy access to the knowledge during execution. In this work, we also show the integration of a graphical user front-end, an assembly planner, a workspace reconfigurator, and more components of the assembly pipeline that all communicate with the help of the FoF ontology. Overall, our integration of the FoF ontology with the other components of a robotic assembly pipeline shows that using an ontology is a practical method to establish a common language and understanding between the involved components.},
  author          = {Sch{\"{a}}fer, Philipp Matthias and Steinmetz, Franz and Schneyer, Stefan and Bachmann, Timo and Eiband, Thomas and Lay, Florian Samuel and Padalkar, Abhishek and S{\"{u}}rig, Christoph and Stulp, Freek and Nottensteiner, Korbinian},
  doi             = {10.24963/kr.2021/73},
  file            = {:Users/aguinam1/Downloads/kr2021-0073-schafer-et-al.pdf:pdf},
  isbn            = {9781956792997},
  journal         = {Proceedings of the 18th International Conference on Principles of Knowledge Representation and Reasoning, KR 2021},
  mendeley-groups = {KR+ICAPS Proceedings,Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {702--706},
  title           = {{Flexible Robotic Assembly Based on Ontological Representation of Tasks, Skills, and Resources}},
  year            = {2021}
}
@article{Jiang2019,
  abstract        = {Robots need task planning algorithms to sequence actions toward accomplishing goals that are impossible through individual actions. Off-the-shelf task planners can be used by intelligent robotics practitioners to solve a variety of planning problems. However, many different planners exist, each with different strengths and weaknesses, and there are no general rules for which planner would be best to apply to a given problem. In this study, we empirically compare the performance of state-of-the-art planners that use either the planning domain description language (PDDL) or answer set programming (ASP) as the underlying action language. PDDL is designed for task planning, and PDDL-based planners are widely used for a variety of planning problems. ASP is designed for knowledge-intensive reasoning, but can also be used to solve task planning problems. Given domain encodings that are as similar as possible, we find that PDDL-based planners perform better on problems with longer solutions, and ASP-based planners are better on tasks with a large number of objects or tasks in which complex reasoning is required to reason about action preconditions and effects. The resulting analysis can inform selection among general-purpose planning systems for particular robot task planning domains.},
  archiveprefix   = {arXiv},
  arxivid         = {1804.08229},
  author          = {qian Jiang, Yu and qi Zhang, Shi and Khandelwal, Piyush and Stone, Peter},
  doi             = {10.1631/FITEE.1800514},
  eprint          = {1804.08229},
  file            = {:Users/aguinam1/Downloads/FITEE.1800514.pdf:pdf},
  issn            = {20959230},
  journal         = {Frontiers of Information Technology and Electronic Engineering},
  keywords        = {Answer set programming (ASP),Planning domain description language (PDDL),Robotics,TP242,Task planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  number          = {3},
  pages           = {363--373},
  title           = {{Task planning in robotics: an empirical comparison of PDDL- and ASP-based systems}},
  volume          = {20},
  year            = {2019}
}
@article{Miao2023,
  author          = {Miao, Runqing and Jia, Qingxuan and Sun, Fuchun},
  doi             = {10.1108/ria-09-2022-0226},
  file            = {:Users/aguinam1/Downloads/10-1108_RIA-09-2022-0226.pdf:pdf},
  issn            = {2754-6969},
  journal         = {Robotic Intelligence and Automation},
  keywords        = {assembly,knowledge graph,paper type research paper,robot manipulation,scene graph,task planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  title           = {{Long-term robot manipulation task planning with scene graph and semantic knowledge}},
  year            = {2023}
}
@article{Patterson2021,
  abstract        = {Many mathematical objects can be represented as functors from finitely-presented categories $\mathsf{C}$ to $\mathsf{Set}$. For instance, graphs are functors to $\mathsf{C}$ from the category with two parallel arrows. Such functors are known informally as $\mathsf{C}$-sets. In this paper, we describe and implement an extension of $\mathsf{C}$-sets having data attributes with fixed types, such as graphs with labeled vertices or real-valued edge weights. We call such structures "acsets," short for "attributed $\mathsf{C}$-sets." Derived from previous work on algebraic databases, acsets are a joint generalization of graphs and data frames. They also encompass more elaborate graph-like objects such as wiring diagrams and Petri nets with rate constants. We develop the mathematical theory of acsets and then describe a generic implementation in the Julia programming language, which uses advanced language features to achieve performance comparable with specialized data structures.},
  archiveprefix   = {arXiv},
  arxivid         = {2106.04703},
  author          = {Patterson, Evan and Lynch, Owen and Fairbanks, James},
  eprint          = {2106.04703},
  file            = {:Users/aguinam1/Downloads/2106.04703.pdf:pdf;:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Patterson, Lynch, Fairbanks - 2021 - Categorical Data Structures for Technical Computing.pdf:pdf},
  journal         = {Compositionality},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {5},
  pages           = {1--27},
  title           = {{Categorical Data Structures for Technical Computing}},
  url             = {http://arxiv.org/abs/2106.04703},
  volume          = {4},
  year            = {2021}
}
@article{Silver2021,
  abstract        = {Real-world planning problems often involve hundreds or even thousands of objects, straining the limits of modern planners. In this work, we address this challenge by learning to predict a small set of objects that, taken together, would be sufficient for finding a plan. We propose a graph neural network architecture for predicting object importance in a single inference pass, thus incurring little overhead while greatly reducing the number of objects that must be considered by the planner. Our approach treats the planner and transition model as black boxes, and can be used with any off-the-shelf planner. Empirically, across classical planning, probabilistic planning, and robotic task and motion planning, we find that our method results in planning that is significantly faster than several baselines, including other partial grounding strategies and lifted planners. We conclude that learning to predict a sufficient set of objects for a planning problem is a simple, powerful, and general mechanism for planning in large instances. Video: https://youtu.be/FWsVJc2fvCE Code: https://git.io/JIsqX.},
  archiveprefix   = {arXiv},
  arxivid         = {2009.05613},
  author          = {Silver, Tom and Chitnis, Rohan and Curtis, Aidan and Tenenbaum, Joshua and Lozano-P{\'{e}}rez, Tom{\'{a}}s and Kaelbling, Leslie Pack},
  doi             = {10.1609/aaai.v35i13.17421},
  eprint          = {2009.05613},
  file            = {:Users/aguinam1/Downloads/17421-Article Text-20915-1-2-20210518.pdf:pdf},
  isbn            = {9781713835974},
  issn            = {2159-5399},
  journal         = {35th AAAI Conference on Artificial Intelligence, AAAI 2021},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  pages           = {11962--11971},
  title           = {{Planning with Learned Object Importance in Large Problem Instances using Graph Neural Networks}},
  volume          = {13B},
  year            = {2021}
}
@article{Lifschitz2002,
  abstract        = {The idea of answer set programming is to represent a given computational problem by a logic program whose answer sets correspond to solutions, and then use an answer set solver, such as SMODELS or DLV, to find an answer set for this program. Applications of this method to planning are related to the line of research on the frame problem that started with the invention of formal nonmonotonic reasoning in 1980. {\textcopyright} 2002 Elsevier Science B.V. All rights reserved.},
  author          = {Lifschitz, Vladimir},
  doi             = {10.1016/S0004-3702(02)00186-8},
  file            = {:Users/aguinam1/Downloads/1-s2.0-S0004370202001868-main.pdf:pdf},
  issn            = {00043702},
  journal         = {Artificial Intelligence},
  keywords        = {Answer sets,Default logic,Frame problem,Logic programming,Planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  number          = {1-2},
  pages           = {39--54},
  title           = {{Answer set programming and plan generation}},
  volume          = {138},
  year            = {2002}
}
@article{Agia2022,
  abstract        = {3D scene graphs (3DSGs) are an emerging description; unifying symbolic, topological, and metric scene representations. However, typical 3DSGs contain hundreds of objects and symbols even for small environments; rendering task planning on the full graph impractical. We construct TASKOGRAPHY, the first large-scale robotic task planning benchmark over 3DSGs. While most benchmarking efforts in this area focus on vision-based planning, we systematically study symbolic planning, to decouple planning performance from visual representation learning. We observe that, among existing methods, neither classical nor learning-based planners are capable of real-time planning over full 3DSGs. Enabling real-time planning demands progress on both (a) sparsifying 3DSGs for tractable planning and (b) designing planners that better exploit 3DSG hierarchies. Towards the former goal, we propose SCRUB, a task-conditioned 3DSG sparsification method; enabling classical planners to match and in some cases surpass state-of-the-art learning-based planners. Towards the latter goal, we propose SEEK, a procedure enabling learning-based planners to exploit 3DSG structure, reducing the number of replanning queries required by current best approaches by an order of magnitude. We will open-source all code and baselines to spur further research along the intersections of robot task planning, learning and 3DSGs.},
  archiveprefix   = {arXiv},
  arxivid         = {2207.05006},
  author          = {Agia, Christopher and Jatavallabhula, Krishna Murthy and Khodeir, Mohamed and Miksik, Ondrej and Vineet, Vibhav and Mukadam, Mustafa and Paull, Liam and Shkurti, Florian},
  eprint          = {2207.05006},
  file            = {:Users/aguinam1/Downloads/2207.05006.pdf:pdf},
  journal         = {5th Conference on Robot Learning},
  keywords        = {3d scene graphs,benchmarks,learning to plan,robot task planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  pages           = {1--18},
  title           = {{TASKOGRAPHY: Evaluating robot task planning over large 3D scene graphs}},
  url             = {http://arxiv.org/abs/2207.05006},
  year            = {2021}
}
@article{Galindo2008,
  abstract        = {Task planning for mobile robots usually relies solely on spatial information and on shallow domain knowledge, such as labels attached to objects and places. Although spatial information is necessary for performing basic robot operations (navigation and localization), the use of deeper domain knowledge is pivotal to endow a robot with higher degrees of autonomy and intelligence. In this paper, we focus on semantic knowledge, and show how this type of knowledge can be profitably used for robot task planning. We start by defining a specific type of semantic maps, which integrates hierarchical spatial information and semantic knowledge. We then proceed to describe how these semantic maps can improve task planning in two ways: extending the capabilities of the planner by reasoning about semantic information, and improving the planning efficiency in large domains. We show several experiments that demonstrate the effectiveness of our solutions in a domain involving robot navigation in a domestic environment. {\textcopyright} 2008 Elsevier B.V. All rights reserved.},
  author          = {Galindo, Cipriano and Fern{\'{a}}ndez-Madrigal, Juan Antonio and Gonz{\'{a}}lez, Javier and Saffiotti, Alessandro},
  doi             = {10.1016/j.robot.2008.08.007},
  file            = {:Users/aguinam1/Downloads/1-s2.0-S0921889008001188-main.pdf:pdf},
  issn            = {09218890},
  journal         = {Robotics and Autonomous Systems},
  keywords        = {Cognitive robotics,Knowledge representation,Mobile robotics,Robot maps,Task planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  number          = {11},
  pages           = {955--966},
  publisher       = {Elsevier B.V.},
  title           = {{Robot task planning using semantic maps}},
  url             = {http://dx.doi.org/10.1016/j.robot.2008.08.007},
  volume          = {56},
  year            = {2008}
}
@article{Acar2020,
  abstract        = {Influence diagrams (IDs) are well-known formalisms extending Bayesian networks to model decision situations under uncertainty. Although they are convenient as a decision theoretic tool, their knowledge representation ability is limited in capturing other crucial notions such as logical consistency. We complement IDs with the light-weight description logic (DL) ℰℲ to overcome such limitations. We consider a setup where DL axioms hold in some contexts, yet the actual context is uncertain. The framework benefits from the convenience of using DL as a domain knowledge representation language and the modelling strength of IDs to deal with decisions over contexts in the presence of contextual uncertainty. We define related reasoning problems and study their computational complexity.},
  author          = {Acar, Erman and Pe{\~{n}}aloza, Rafael},
  doi             = {10.24963/kr.2020/2},
  file            = {:Users/aguinam1/Downloads/kr2020-0002-acar-et-al.pdf:pdf},
  isbn            = {9781713825982},
  journal         = {17th International Conference on Principles of Knowledge Representation and Reasoning, KR 2020},
  mendeley-groups = {KR+ICAPS Proceedings,Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {KR},
  pages           = {11--20},
  title           = {{Reasoning with contextual knowledge and influence diagrams}},
  volume          = {1},
  year            = {2020}
}
@article{Gerevini2006,
  abstract        = {The notion of plan qualityin automated planning is a practically very important issue. In many real-world planning domains, we have to address problems with a large set of solutions, or with a set of goals that cannot all be achieved. In these problems, it is important to generate plans of good or optimal quality achieving all problem goals (if possible) or some subset of them. In the previous International planning competitions, the plan generation CPU-time played a central role in the evaluation of the competing planners. In the fifth International planning competition (IPC-5), while considering the CPU-time, we would like to give greater emphasis to the importance of plan quality. The versions of PDDL used in the previous two competitions (PDDL2.1 and PDDL2.2) allow us to express some criteria for plan quality, such as the number of plan actions or parallel steps, and relatively complex plan metrics involving plan makespan and numerical quantities. These are powerful and expressive in domains that include metric fluents, but plan quality can still only be measured by plan size in the case of propositional planning. We believe that these criteria are insufficient, and we propose to extend PDDL with new constructs increasing its expressive power about the plan quality specification.},
  author          = {Gerevini, Alfonso and Long, Derek},
  journal         = {Proceedings of the ICAPS-2006 Workshop on Preferences and Soft Constraints in Planning},
  mendeley-groups = {Projects/Visualization of PDDL Solutions,Topics/AI Planning,Projects/KR2023},
  title           = {{Preferences and Soft Constraints in PDDL3}},
  year            = {2006}
}
@article{Pani2001,
  abstract        = {The explicit representation and reasoning about time is an important problem in many areas of artificial intelligence. Over the last 10-1% years, it has been attracting the attention of many researchers. Several temporal reasoning systems, differing in design issues related to ontology of time, underlying temporal logic, temporal constraints used and algorithms employed, have been developed. In this survey, important representational issues which determine a temporal reasoning system are introduced. In particular, several important notions like change, causality, actions are described in terms of time. For each issue different choices available in the literature are discussed. The most influential approaches to temporal reasoning in artificial intelligence are analyzed in terms of these major representational issues. {\textcopyright} 2001 Elsevier Science Ltd. All rights reserved.},
  author          = {Pani, A. K. and Bhattacharjee, G. P.},
  doi             = {10.1016/S0895-7177(01)00049-8},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Pani, Bhattacharjee - 2001 - Temporal representation and reasoning in artificial intelligence A review.pdf:pdf},
  issn            = {08957177},
  journal         = {Mathematical and Computer Modelling},
  keywords        = {Fuzzy temporal relation,Knowledge representation,Temporal constraint propagation,Temporal entities,Temporal primitive,Temporal reasoning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  number          = {1-2},
  pages           = {55--80},
  title           = {{Temporal representation and reasoning in artificial intelligence: A review}},
  volume          = {34},
  year            = {2001}
}
@article{Beetz2018,
  abstract        = {In this paper we present KnowRob2, a second generation knowledge representation and reasoning framework for robotic agents. KnowRob2 is an extension and partial redesign of KnowRob, currently one of the most advanced knowledge processing systems for robots that has enabled them to successfully perform complex manipulation tasks such as making pizza, conducting chemical experiments, and setting tables. The knowledge base appears to be a conventional first-order time interval logic knowledge base, but it exists to a large part only virtually: many logical expressions are constructed on demand from data structures of the control program, computed through robotics algorithms including ones for motion planning and solving inverse kinematics problems, and log data stored in noSQL databases. Novel features and extensions of KnowRob2 substantially increase the capabilities of robotic agents of acquiring open-ended manipulation skills and competence, reasoning about how to perform manipulation actions more realistically, and acquiring commonsense knowledge.},
  annote          = {What kind of queries can KNOWROB handle?},
  author          = {Beetz, Michael and Bessler, Daniel and Haidu, Andrei and Pomarlan, Mihai and Bozcuoglu, Asil Kaan and Bartels, Georg},
  doi             = {10.1109/ICRA.2018.8460964},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Beetz et al. - 2018 - Know Rob 2.0 - A 2nd Generation Knowledge Processing Framework for Cognition-Enabled Robotic Agents.pdf:pdf},
  isbn            = {9781538630815},
  issn            = {10504729},
  journal         = {Proceedings - IEEE International Conference on Robotics and Automation},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {512--519},
  title           = {{Know Rob 2.0 - A 2nd Generation Knowledge Processing Framework for Cognition-Enabled Robotic Agents}},
  year            = {2018}
}
@article{Geffner2002,
  author          = {Geffner, Hector},
  file            = {:Users/aguinam1/Downloads/AAAI02-179.pdf:pdf},
  journal         = {AAAI-02 Proceedings},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {1013--1023},
  title           = {{Perspectives on Artificial Intelligence Planning}},
  year            = {2002}
}
@article{Tenorth2017,
  abstract        = {In order to robustly perform tasks based on abstract instructions, robots need sophisticated knowledge processing methods. These methods have to supply the difference between the (often shallow and symbolic) information in the instructions and the (detailed, grounded and often real-valued) information needed for execution. For filling these information gaps, a robot first has to identify them in the instructions, reason about suitable information sources, and combine pieces of information from different sources and of different structure into a coherent knowledge base. To this end we propose the KNOWROB knowledge processing system for robots. In this article, we discuss why the requirements of a robot knowledge processing system differ from what is commonly investigated in AI research, and propose to re-consider a KR system as a semantically annotated view on information and algorithms that are often already available as part of the robot's control system. We then introduce representational structures and a common vocabulary for representing knowledge about robot actions, events, objects, environments, and the robot's hardware as well as inference procedures that operate on this common representation. The KNOWROB system has been released as open-source software and is being used on several robots performing complex object manipulation tasks. We evaluate it through prototypical queries that demonstrate the expressive power and its impact on the robot's performance.},
  author          = {Tenorth, Moritz and Beetz, Michael},
  doi             = {10.1016/j.artint.2015.05.010},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Tenorth, Beetz - 2017 - Representations for robot knowledge in the KNOWROB framework.pdf:pdf},
  issn            = {00043702},
  journal         = {Artificial Intelligence},
  keywords        = {Autonomous robots,Knowledge representation,Knowledge-enabled robotics},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  pages           = {151--169},
  publisher       = {Elsevier B.V.},
  title           = {{Representations for robot knowledge in the KNOWROB framework}},
  url             = {http://dx.doi.org/10.1016/j.artint.2015.05.010},
  volume          = {247},
  year            = {2017}
}
@article{Gil1990,
  annote          = {Using description logics in planning:
                     1. object taxonomies 
                     2. action taxonomies
                     3. plan taxonomies to encode hierarchy
                     4. goal taxonomies
                     
                     An olog is a description logic with one type of relation
                     
                     Methods that use description logic to represent objects: CLASP, SUDO-PLANNER, EXPECT
                     
                     Inferring affordances for plannings grounded in description logics},
  author          = {Gil, Yolanda},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Gil - 1990 - and Planning.pdf:pdf},
  journal         = {AI Magazine},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {2},
  pages           = {1},
  title           = {{Description Logics and Planning}},
  volume          = {26},
  year            = {1990}
}
@article{Jiang2019,
  abstract        = {Robots need task planning algorithms to sequence actions toward accomplishing goals that are impossible through individual actions. Off-the-shelf task planners can be used by intelligent robotics practitioners to solve a variety of planning problems. However, many different planners exist, each with different strengths and weaknesses, and there are no general rules for which planner would be best to apply to a given problem. In this study, we empirically compare the performance of state-of-the-art planners that use either the planning domain description language (PDDL) or answer set programming (ASP) as the underlying action language. PDDL is designed for task planning, and PDDL-based planners are widely used for a variety of planning problems. ASP is designed for knowledge-intensive reasoning, but can also be used to solve task planning problems. Given domain encodings that are as similar as possible, we find that PDDL-based planners perform better on problems with longer solutions, and ASP-based planners are better on tasks with a large number of objects or tasks in which complex reasoning is required to reason about action preconditions and effects. The resulting analysis can inform selection among general-purpose planning systems for particular robot task planning domains.},
  archiveprefix   = {arXiv},
  arxivid         = {1804.08229},
  author          = {qian Jiang, Yu and qi Zhang, Shi and Khandelwal, Piyush and Stone, Peter},
  doi             = {10.1631/FITEE.1800514},
  eprint          = {1804.08229},
  file            = {:Users/aguinam1/Downloads/FITEE.1800514.pdf:pdf},
  issn            = {20959230},
  journal         = {Frontiers of Information Technology and Electronic Engineering},
  keywords        = {Answer set programming (ASP),Planning domain description language (PDDL),Robotics,TP242,Task planning},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects,Projects/KR2023},
  number          = {3},
  pages           = {363--373},
  title           = {{Task planning in robotics: an empirical comparison of PDDL- and ASP-based systems}},
  volume          = {20},
  year            = {2019}
}
@article{Hogan2021,
  abstract        = {In this article, we provide a comprehensive introduction to knowledge graphs, which have recently garnered significant attention from both industry and academia in scenarios that require exploiting diverse, dynamic, large-scale collections of data. After some opening remarks, we motivate and contrast various graph-based data models, as well as languages used to query and validate knowledge graphs. We explain how knowledge can be represented and extracted using a combination of deductive and inductive techniques. We conclude with high-level future research directions for knowledge graphs.},
  archiveprefix   = {arXiv},
  arxivid         = {2003.02320},
  author          = {Hogan, Aidan and Blomqvist, Eva and Cochez, Michael and D'Amato, Claudia and Melo, Gerard De and Gutierrez, Claudio and Kirrane, Sabrina and Gayo, Jos{\'{e}} Emilio Labra and Navigli, Roberto and Neumaier, Sebastian and Ngomo, Axel Cyrille Ngonga and Polleres, Axel and Rashid, Sabbir M. and Rula, Anisa and Schmelzeisen, Lukas and Sequeda, Juan and Staab, Steffen and Zimmermann, Antoine},
  doi             = {10.1145/3447772},
  eprint          = {2003.02320},
  file            = {:Users/aguinam1/Downloads/3447772.pdf:pdf},
  issn            = {15577341},
  journal         = {ACM Computing Surveys},
  keywords        = {Embeddings,Graph algorithms,Graph databases,Graph neural networks,Graph query languages,Knowledge graphs,Ontologies,Rule mining,Shapes},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {4},
  title           = {{Knowledge graphs}},
  volume          = {54},
  year            = {2021}
}
@article{Chang2023,
  abstract        = {Scene graph is a structured representation of a scene that can clearly express the objects, attributes, and relationships between objects in the scene. As computer vision technology continues to develop, people are no longer satisfied with simply detecting and recognizing objects in images; instead, people look forward to a higher level of understanding and reasoning about visual scenes. For example, given an image, we want to not only detect and recognize objects in the image, but also understand the relationship between objects (visual relationship detection), and generate a text description (image captioning) based on the image content. Alternatively, we might want the machine to tell us what the little girl in the image is doing (Visual Question Answering (VQA)), or even remove the dog from the image and find similar images (image editing and retrieval), etc. These tasks require a higher level of understanding and reasoning for image vision tasks. The scene graph is just such a powerful tool for scene understanding. Therefore, scene graphs have attracted the attention of a large number of researchers, and related research is often cross-modal, complex, and rapidly developing. However, no relatively systematic survey of scene graphs exists at present. To this end, this survey conducts a comprehensive investigation of the current scene graph research. More specifically, we first summarize the general definition of the scene graph, then conducte a comprehensive and systematic discussion on the generation method of the scene graph (SGG) and the SGG with the aid of prior knowledge. We then investigate the main applications of scene graphs and summarize the most commonly used datasets. Finally, we provide some insights into the future development of scene graphs.},
  archiveprefix   = {arXiv},
  arxivid         = {2104.01111},
  author          = {Chang, Xiaojun and Ren, Pengzhen and Xu, Pengfei and Li, Zhihui and Chen, Xiaojiang and Hauptmann, Alex},
  doi             = {10.1109/TPAMI.2021.3137605},
  eprint          = {2104.01111},
  file            = {:Users/aguinam1/Downloads/2104.01111.pdf:pdf},
  issn            = {19393539},
  journal         = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
  keywords        = {Scene graph,prior information,visual feature extraction,visual relationship recognition},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  number          = {1},
  pages           = {1--26},
  title           = {{A Comprehensive Survey of Scene Graphs: Generation and Application}},
  volume          = {45},
  year            = {2023}
}
@book{Leinster2016,
  archiveprefix   = {arXiv},
  arxivid         = {arXiv:1612.09375v1},
  author          = {Leinster, Tom},
  eprint          = {arXiv:1612.09375v1},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - 2016 - Basic Category Theory.pdf:pdf},
  mendeley-groups = {Topics/Data Representation & Management,Topics/Category Theory,Projects/KR2023},
  publisher       = {Cambridge University Press},
  title           = {{Basic Category Theory}},
  url             = {https://arxiv.org/pdf/1612.09375.pdf},
  year            = {2016}
}
@book{Spivak2014,
  abstract        = {There are many books designed to introduce category theory to either a mathematical audience or a computer science audience. In this book, our audience is the broader scientific community. We attempt to show that category theory can be applied throughout the sciences as a framework for modeling phenomena and communicating results. In order to target the scientific audience, this book is example-based rather than proof-based. For example, monoids are framed in terms of agents acting on objects, sheaves are introduced with primary examples coming from geography, and colored operads are discussed in terms of their ability to model self-similarity. A new version with solutions to exercises will be available through MIT Press.},
  archiveprefix   = {arXiv},
  arxivid         = {1302.6946},
  author          = {Spivak, David I.},
  eprint          = {1302.6946},
  file            = {:Users/aguinam1/Downloads/CT4S.pdf:pdf},
  mendeley-groups = {Topics/UMD PhD Thesis,Projects/KR2023},
  publisher       = {The MIT Press},
  title           = {{Category theory for scientists}},
  url             = {http://arxiv.org/abs/1302.6946},
  year            = {2014}
}
@article{Thiebaux2005,
  abstract        = {There is controversy as to whether explicit support for pddl-like axioms and derived predicates is needed for planners to handle real-world domains effectively. Many researchers have deplored the lack of precise semantics for such axioms, while others have argued that it might be best to compile them away. We propose an adequate semantics for pddl axioms and show that they are an essential feature by proving that it is impossible to compile them away if we restrict the growth of plans and domain descriptions to be polynomial. These results suggest that adding a reasonable implementation to handle axioms inside the planner is beneficial for the performance. Our experiments confirm this suggestion. {\textcopyright} 2005 Elsevier B.V. All rights reserved.},
  author          = {Thi{\'{e}}baux, Sylvie and Hoffmann, J{\"{o}}rg and Nebel, Bernhard},
  doi             = {10.1016/j.artint.2005.05.004},
  file            = {:Users/aguinam1/Downloads/1-s2.0-S0004370205000810-main.pdf:pdf},
  issn            = {00043702},
  journal         = {Artificial Intelligence},
  keywords        = {Classical planning,Expressive power,PDDL},
  mendeley-groups = {Projects/KR2023},
  number          = {1-2},
  pages           = {38--69},
  title           = {{In defense of PDDL axioms}},
  volume          = {168},
  year            = {2005}
}
@article{Ivankovic2015,
  abstract        = {The use of expressive logical axioms to specify derived predicates often allows planning domains to be formulated more compactly and naturally. We consider axioms in the form of a logic program with recursively defined predicates and negationas-failure, as in PDDL 2.2. We show that problem formulations with axioms are not only more elegant, but can also be easier to solve, because specifying indirect action effects via axioms removes unnecessary choices from the search space of the planner. Despite their potential, however, axioms are not widely supported, particularly by cost-optimal planners. We draw on the connection between planning axioms and answer set programming to derive a consistency-based relaxation, from which we obtain axiom-aware versions of several admissible planning heuristics, such as hmax and pattern database heuristics.},
  author          = {Ivankovic, Franc and Haslum, Patrik},
  file            = {:Users/aguinam1/Downloads/01_Ivankovich_Optimal_Planning_with_Axioms_2015.pdf:pdf},
  isbn            = {9781577357384},
  issn            = {10450823},
  journal         = {IJCAI International Joint Conference on Artificial Intelligence},
  keywords        = {Technical Papers — Planning},
  mendeley-groups = {Projects/KR2023},
  number          = {Ijcai},
  pages           = {1580--1586},
  title           = {{Optimal planning with axioms}},
  volume          = {2015-January},
  year            = {2015}
}
@article{Patterson2017,
  author     = {Evan Patterson},
  title      = {Knowledge Representation in Bicategories of Relations},
  journal    = {CoRR},
  volume     = {abs/1706.00526},
  year       = {2017},
  url        = {http://arxiv.org/abs/1706.00526},
  eprinttype = {arXiv},
  eprint     = {1706.00526},
  timestamp  = {Mon, 13 Aug 2018 16:46:44 +0200},
  biburl     = {https://dblp.org/rec/journals/corr/Patterson17.bib},
  bibsource  = {dblp computer science bibliography, https://dblp.org}
}
@techreport{rdf11,
  author      = {Eric Prud'hommeaux and Gavin Carothers},
  title       = {{RDF 1.1 Concepts and Abstract Syntax}},
  institution = {World Wide Web Consortium},
  type        = {Recommendation},
  number      = {REC-rdf11-concepts-20140225},
  year        = {2014},
  month       = {February},
  url         = {https://www.w3.org/TR/rdf11-concepts/}
}
@book{maclane1971,
  added-at   = {2009-09-18T21:22:09.000+0200},
  address    = {New York},
  author     = {MacLane, Saunders},
  biburl     = {https://www.bibsonomy.org/bibtex/29e8ca8b4bf357cc41e40e98cca25cb8c/minas},
  interhash  = {51566d046db4c3ea930c2b5ca79173f1},
  intrahash  = {9e8ca8b4bf357cc41e40e98cca25cb8c},
  keywords   = {CategoryTheory},
  mrclass    = {18-02},
  mrnumber   = {MR0354798 (50 \#7275)},
  mrreviewer = {H.-B. Brinkmann},
  note       = {Graduate Texts in Mathematics, Vol. 5},
  pages      = {ix+262},
  publisher  = {Springer-Verlag},
  timestamp  = {2009-09-18T21:22:09.000+0200},
  title      = {Categories for the Working Mathematician},
  year       = 1971
}
@article{Levesque1997,
  abstract        = {This paper proposes a new logic programming language called GOLOG whose interpreter automatically maintains an explicit representation of the dynamic world being modeled, on the basis of user supplied axioms about the preconditions and effects of actions and the initial state of the world. This allows programs to reason about the state of the world and consider the effects of various possible courses of action before committing to a particular behavior. The net effect is that programs may be written at a much higher level of abstraction than is usually possible. The language appears well suited for applications in high level control of robots and industrial processes, intelligent software agents, discrete event simulation, etc. It is based on a formal theory of action specified in an extended version of the situation calculus. A prototype implementation in Prolog has been developed. {\textcopyright} Elsevier Science Inc., 1997.},
  author          = {Levesque, Hector J. and Reiter, Raymond and Lesp{\'{e}}rance, Yves and Lin, Fangzhen and Scherl, Richard B.},
  doi             = {10.1016/S0743-1066(96)00121-5},
  file            = {:Users/aguinam1/Downloads/1-s2.0-S0743106696001215-main.pdf:pdf},
  issn            = {07431066},
  journal         = {Journal of Logic Programming},
  mendeley-groups = {Projects/KR2023},
  number          = {1-3},
  pages           = {59--83},
  title           = {{Golog: A logic programming language for dynamic domains}},
  volume          = {31},
  year            = {1997}
}

@book{Riehl2016,
  abstract        = {Specialized. Category theory has provided the foundations for many of the twentieth century's greatest advances in pure mathematics. This concise, original text for a one-semester introduction to the subject is derived from courses that author Emily Riehl taught at Harvard and Johns Hopkins Universities. The treatment introduces the essential concepts of category theory: categories, functors, natural transformations, the Yoneda Iemma, limits and colimits, adjunctions, monads, Kan extensions, and other topics. Suitable for advanced undergraduates and graduate students in mathematics, the text provides tools for understanding and attacking difficult problems in algebra, number theory, algebraic geometry, and algebraic topology. Drawing upon a broad range of mathematical examples from the categorical perspective, the author illustrates how the concepts and constructions of category theory arise from and illuminate more basic mathematical ideas. While the reader will be rewarded for familiarity with these background mathematical contexts, essential prerequisites are limited to basic set theory and logic. Categories, functors, natural transformations -- Universal properties, representability, and the Yoneda lemma -- Limits and colimits -- Adjunctions -- Monads and their algebras -- All concepts are Kan extensions -- Epilogue : theorems in category theory.},
  author          = {Riehl, Emily},
  booktitle       = {Cambridge University Press},
  file            = {:Users/aguinam1/Downloads/context.pdf:pdf},
  isbn            = {9780486809038},
  mendeley-groups = {Projects/KR2023},
  title           = {{Category theory in context}},
  url             = {http://www.math.jhu.edu/$\sim$eriehl/context/%0Ahttps://store.doverpublications.com/048680903x.html},
  year            = {2016}
}
@book{Jacobs1999,
  author          = {Jacobs, Bart},
  booktitle       = {Studies in Logic and the Foundations of Mathematics},
  file            = {:Users/aguinam1/Downloads/jacobs (2).pdf:pdf},
  isbn            = {9786021018187},
  issn            = {2252-3405},
  mendeley-groups = {Projects/KR2023},
  publisher       = {Elsevier},
  title           = {{Categorical Logic and Type Theory}},
  volume          = {141},
  year            = {1999}
}

@article{Geib2018,
  abstract        = {This paper defines a learning algorithm for plan grammars used for plan recognition. The algorithm learns Combinatory Categorial Grammars (CCGs) that capture the structure of plans from a set of successful plan execution traces paired with the goal of the actions. This work is motivated by past work on CCG learning algorithms for natural language processing, and is evaluated on five well know planning domains.},
  author          = {Geib, Christopher W. and Kantharaju, Pavan},
  doi             = {10.1609/aaai.v32i1.11729},
  file            = {:Users/aguinam1/Downloads/11729-Article Text-15257-1-2-20201228 (1).pdf:pdf},
  isbn            = {9781577358008},
  issn            = {2159-5399},
  journal         = {32nd AAAI Conference on Artificial Intelligence, AAAI 2018},
  keywords        = {Machine Learning Methods Track},
  mendeley-groups = {KR+ICAPS Proceedings},
  pages           = {3007--3014},
  title           = {{Learning combinatory categorial grammars for plan recognition}},
  year            = {2018}
}
@article{Geib2009,
  abstract        = {We present the PHATT algorithm for plan recognition. Unlike previous approaches to plan recognition, PHATT is based on a model of plan execution. We show that this clarifies several difficult issues in plan recognition including the execution of multiple interleaved root goals, partially ordered plans, and failing to observe actions. We present the PHATT algorithm's theoretical basis, and an implementation based on tree structures. We also investigate the algorithm's complexity, both analytically and empirically. Finally, we present PHATT's integrated constraint reasoning for parametrized actions and temporal constraints. {\textcopyright} 2009 Elsevier B.V.},
  author          = {Geib, Christopher W. and Goldman, Robert P.},
  doi             = {10.1016/j.artint.2009.01.003},
  file            = {:Users/aguinam1/Downloads/A probabilistic plan recognition algorithm based on plan tree grammars.pdf:pdf},
  issn            = {00043702},
  journal         = {Artificial Intelligence},
  keywords        = {Action grammars,Bayesian methods,Goal recognition,Intent inference,Plan recognition,Probabilistic grammars,Task tracking},
  mendeley-groups = {KR+ICAPS Proceedings},
  number          = {11},
  pages           = {1101--1132},
  title           = {{A probabilistic plan recognition algorithm based on plan tree grammars}},
  volume          = {173},
  year            = {2009}
}

@article{Kolve2017,
  abstract      = {We introduce The House Of inteRactions (THOR), a framework for visual AI research, available at http://ai2thor.allenai.org. AI2-THOR consists of near photo-realistic 3D indoor scenes, where AI agents can navigate in the scenes and interact with objects to perform tasks. AI2-THOR enables research in many different domains including but not limited to deep reinforcement learning, imitation learning, learning by interaction, planning, visual question answering, unsupervised representation learning, object detection and segmentation, and learning models of cognition. The goal of AI2-THOR is to facilitate building visually intelligent models and push the research forward in this domain.},
  archiveprefix = {arXiv},
  arxivid       = {1712.05474},
  author        = {Kolve, Eric and Mottaghi, Roozbeh and Han, Winson and VanderBilt, Eli and Weihs, Luca and Herrasti, Alvaro and Deitke, Matt and Ehsani, Kiana and Gordon, Daniel and Zhu, Yuke and Kembhavi, Aniruddha and Gupta, Abhinav and Farhadi, Ali},
  eprint        = {1712.05474},
  file          = {:Users/aguinam1/Downloads/1712.05474.pdf:pdf},
  pages         = {1--12},
  title         = {{AI2-THOR: An Interactive 3D Environment for Visual AI}},
  url           = {http://arxiv.org/abs/1712.05474},
  year          = {2017}
}

@article{Spivak2012,
  abstract        = {In this paper we present a simple database definition language: that of categories and functors. A database schema is a small category and an instance is a set-valued functor on it. We show that morphisms of schemas induce three data migration functors, which translate instances from one schema to the other in canonical ways. These functors parameterize projections, unions, and joins over all tables simultaneously and can be used in place of conjunctive and disjunctive queries. We also show how to connect a database and a functional programming language by introducing a functorial connection between the schema and the category of types for that language. We begin the paper with a multitude of examples to motivate the definitions, and near the end we provide a dictionary whereby one can translate database concepts into category-theoretic concepts and vice versa. {\textcopyright} 2012 Elsevier Inc. All rights reserved.},
  annote          = {Database schemas as a category. Functors maps between on database schema (category) to another. Useful technique finding equivalent relationships and moving data.
                     
                     Impression: I like the category representation of data in tables. 
                     
                     Foundational paper for use of category theory with databases},
  archiveprefix   = {arXiv},
  arxivid         = {1009.1166},
  author          = {Spivak, David I.},
  doi             = {10.1016/j.ic.2012.05.001},
  eprint          = {1009.1166},
  file            = {:Users/aguinam1/Library/Application Support/Mendeley Desktop/Downloaded/Spivak - 2012 - Functorial data migration.pdf:pdf},
  issn            = {08905401},
  journal         = {Information and Computation},
  keywords        = {Adjoint functors,Category theory,Data migration,Databases,Queries},
  mendeley-groups = {Angeline's Collection of Interesting Papers,ICRA 2022 Compositional Robotics,Topics/UMD PhD Thesis},
  pages           = {31--51},
  publisher       = {Elsevier Inc.},
  title           = {{Functorial data migration}},
  url             = {http://dx.doi.org/10.1016/j.ic.2012.05.001},
  volume          = {217},
  year            = {2012}
}

